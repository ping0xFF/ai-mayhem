{
  "x-generated-warning": "\u26a0\ufe0f This file is auto-generated. Do not edit manually",
  "openapi": "3.1.0",
  "info": {
    "title": "Beta APIs",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.g.alchemy.com/data/v1"
    }
  ],
  "paths": {
    "/{apiKey}/transactions/history/by-address": {
      "post": {
        "summary": "Transactions By Wallet (Beta)",
        "description": "Fetches all historical transactions (internal & external) for multiple wallet addresses and networks. Returns a list of transaction objects with metadata and log information. This endpoint will be supported on Ethereum, Solana, and 30+ EVM chains (Beta: currently limited to Ethereum and Base with a limit of 1 address)\n",
        "tags": [
          "Beta API Endpoints"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "schema": {
              "type": "string",
              "default": "docs-demo",
              "description": "For higher throughput, [create your own API key](https://dashboard.alchemy.com/signup)"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "addresses": {
                    "type": "array",
                    "description": "Array of address and networks pairs (limit 1 pairs, max 2 networks). Networks should match network enums.\n",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "Wallet address.",
                          "example": "0x1E6E8695FAb3Eb382534915eA8d7Cc1D1994B152",
                          "default": "0x1E6E8695FAb3Eb382534915eA8d7Cc1D1994B152"
                        },
                        "networks": {
                          "type": "array",
                          "default": [
                            "eth-mainnet",
                            "base-mainnet"
                          ],
                          "items": {
                            "type": "string",
                            "default": "eth-mainnet"
                          },
                          "description": "(In BETA and only accepts ETH & BASE mainnets). Network identifier (e.g., eth-mainnet). Find more network enums [here](https://dashboard.alchemy.com/chains)"
                        }
                      },
                      "required": [
                        "address",
                        "networks"
                      ]
                    }
                  },
                  "before": {
                    "type": "string",
                    "description": "The cursor that points to the previous set of results."
                  },
                  "after": {
                    "type": "string",
                    "description": "The cursor that points to the end of the current set of results."
                  },
                  "limit": {
                    "type": "integer",
                    "description": "Sets the maximum number of items per page (Max: 50)",
                    "default": 25
                  },
                  "pageKey": {
                    "type": "string"
                  }
                },
                "required": [
                  "addresses"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "before": {
                      "type": "string",
                      "description": "The cursor that points to the previous set of results."
                    },
                    "after": {
                      "type": "string",
                      "description": "The cursor that points to the end of the current set of results."
                    },
                    "totalCount": {
                      "type": "integer",
                      "description": "Total count of the response items."
                    },
                    "transactions": {
                      "type": "array",
                      "description": "List of transactions by address.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "network": {
                            "type": "string",
                            "description": "Network associated with an individual transaction"
                          },
                          "hash": {
                            "type": "string",
                            "description": "Transaction hash"
                          },
                          "timeStamp": {
                            "type": "string",
                            "description": "(ISO 8601)  Timestamp of transaction mining / confirmation"
                          },
                          "blockNumber": {
                            "type": "integer",
                            "description": "Block number of transaction mining / confirmation"
                          },
                          "blockHash": {
                            "type": "string",
                            "description": "Block hash of transaction mining / confirmation"
                          },
                          "nonce": {
                            "type": "integer",
                            "description": "Transaction nonce"
                          },
                          "transactionIndex": {
                            "type": "integer",
                            "description": "Position of transaction within a block"
                          },
                          "fromAddress": {
                            "type": "string",
                            "description": "From address of transaction (hex string)."
                          },
                          "toAddress": {
                            "type": "string",
                            "description": "To address of transaction (hex string). null if contract creation."
                          },
                          "contractAddress": {
                            "type": "string",
                            "description": "20 Bytes - The contract address created, if the transaction was a contract creation, otherwise null"
                          },
                          "value": {
                            "type": "string",
                            "description": "(uint8) Value of native token value moved within the external transaction"
                          },
                          "cumulativeGasUsed": {
                            "type": "string",
                            "description": "The total amount of gas used when this transaction was executed in the block."
                          },
                          "effectiveGasPrice": {
                            "type": "string",
                            "description": "Gas price parameter"
                          },
                          "gasUsed": {
                            "type": "string",
                            "description": "The amount of gas used by this specific transaction alone"
                          },
                          "logs": {
                            "type": "array",
                            "description": "Array of log objects, which this transaction generated",
                            "items": {
                              "type": "object",
                              "properties": {
                                "contractAddress": {
                                  "type": "string",
                                  "description": "20 Bytes - contract address from which this log originated."
                                },
                                "logIndex": {
                                  "type": "string",
                                  "description": "Integer of the log index position in the block. null when its pending log."
                                },
                                "data": {
                                  "type": "string",
                                  "description": "Contains one or more 32 Bytes non-indexed arguments of the log."
                                },
                                "removed": {
                                  "type": "boolean",
                                  "description": "true when the log was removed, due to a chain reorganization. false if its a valid log."
                                },
                                "topics": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Array of zero to four 32 Bytes DATA of indexed log arguments"
                                }
                              }
                            }
                          },
                          "internalTxns": {
                            "type": "array",
                            "description": "Array of internal transaction objects, which this transaction generated",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "CALL or CREATE"
                                },
                                "fromAddress": {
                                  "type": "string",
                                  "description": "20 Bytes - address of the sender"
                                },
                                "toAddress": {
                                  "type": "string",
                                  "description": "20 Bytes - address of the receiver. null when its a contract creation transaction"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "amount of value for transfer (in hex)"
                                },
                                "gas": {
                                  "type": "string",
                                  "description": "amount of gas provided for the call (in hex)"
                                },
                                "gasUsed": {
                                  "type": "string",
                                  "description": "amount of gas used during the call (in hex)"
                                },
                                "input": {
                                  "type": "string",
                                  "description": "call data"
                                },
                                "output": {
                                  "type": "string",
                                  "description": "return data"
                                },
                                "error": {
                                  "type": "string",
                                  "description": "error, if any"
                                },
                                "revertReason": {
                                  "type": "string",
                                  "description": "solidity revert reason, if any"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "transactions"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid input (e.g., malformed JSON).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Detailed error message."
                        }
                      },
                      "required": [
                        "message"
                      ],
                      "description": "Error details."
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests: Rate limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Detailed error message."
                        }
                      },
                      "required": [
                        "message"
                      ],
                      "description": "Error details."
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-transaction-history-by-address"
      }
    }
  }
}