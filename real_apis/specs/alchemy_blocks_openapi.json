{
  "x-generated-warning": "\u26a0\ufe0f This file is auto-generated. Do not edit manually",
  "openapi": "3.1.0",
  "info": {
    "title": "\u26d3\ufe0f Block Timestamp API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.g.alchemy.com/data/v1"
    }
  ],
  "security": [
    {
      "apiKey": []
    }
  ],
  "paths": {
    "/{apiKey}/utility/blocks/by-timestamp": {
      "get": {
        "summary": "Blocks by Timestamp",
        "description": "Fetches the first block before or after a given timestamp. Returns the block's number and on-chain timestamp.",
        "tags": [
          "Blocks API Endpoints"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "docs-demo"
            },
            "description": "For higher throughput, [create your own API key](https://dashboard.alchemy.com/signup)"
          },
          {
            "name": "networks",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "maxItems": 3,
              "items": {
                "type": "string",
                "default": "eth-mainnet"
              }
            },
            "description": "Array of networks to query on. The response will be an array with one block per network. Find network enums [here](https://dashboard.alchemy.com/chains)"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2025-02-28T19:38:57Z"
            },
            "description": "Unix or ISO timestamp"
          },
          {
            "name": "direction",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "BEFORE",
                "AFTER"
              ],
              "default": "AFTER"
            },
            "description": "Return the first block \"BEFORE\" or \"AFTER\" the provided timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "List of blocks",
                      "items": {
                        "type": "object",
                        "properties": {
                          "network": {
                            "type": "string",
                            "description": "Network identifier"
                          },
                          "block": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "integer",
                                "description": "Block number"
                              },
                              "timestamp": {
                                "type": "string",
                                "description": "ISO timestamp of the block"
                              }
                            },
                            "required": [
                              "number",
                              "timestamp"
                            ]
                          }
                        },
                        "required": [
                          "network",
                          "block"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Malformed request or missing parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Detailed error message."
                        }
                      },
                      "required": [
                        "message"
                      ],
                      "description": "Error details."
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests: Rate limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Detailed error message."
                        }
                      },
                      "required": [
                        "message"
                      ],
                      "description": "Error details."
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        },
        "operationId": "blocks-by-timestamp"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "An API key that will be supplied in a named header.",
        "x-default": "Bearer API_KEY"
      }
    },
    "schemas": {
      "BlockTimestampResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List of blocks",
            "items": {
              "type": "object",
              "properties": {
                "network": {
                  "type": "string",
                  "description": "Network identifier"
                },
                "block": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "integer",
                      "description": "Block number"
                    },
                    "timestamp": {
                      "type": "string",
                      "description": "ISO timestamp of the block"
                    }
                  },
                  "required": [
                    "number",
                    "timestamp"
                  ]
                }
              },
              "required": [
                "network",
                "block"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      }
    }
  }
}